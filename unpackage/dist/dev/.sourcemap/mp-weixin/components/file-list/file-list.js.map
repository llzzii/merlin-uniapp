{"version":3,"sources":["webpack:///E:/uniAPP/merlin/components/file-list/file-list.vue?14ae","webpack:///E:/uniAPP/merlin/components/file-list/file-list.vue?0512","webpack:///E:/uniAPP/merlin/components/file-list/file-list.vue?146e","webpack:///E:/uniAPP/merlin/components/file-list/file-list.vue?58e1","uni-app:///components/file-list/file-list.vue"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsH;AACtH;AAC6D;AACL;;;AAGxD;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,+EAAM;AACR,EAAE,oFAAM;AACR,EAAE,6FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,wFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,sPAEN;AACP,KAAK;AACL;AACA,aAAa,qNAEN;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAmmB,CAAgB,6nBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;ACYvnB,qE;AACA;AACA;AACA;AACA,2D;AACA;AACA;AACA;AACA,kBADA;AAEA,+CAFA,EADA,EADA;;;AAOA,MAPA,kBAOA;AACA;AACA,kBADA;AAEA,kBAFA;AAGA,mBAHA;AAIA,qBAJA;AAKA,qBALA;AAMA,cANA;AAOA,eAPA;;AASA,GAjBA;AAkBA,QAlBA,oBAkBA;AACA;AACA,GApBA;AAqBA;AACA;;;AAGA,WAJA,qBAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sDADA;AAEA,0DAFA;AAGA,yBAHA;;AAKA;AACA;AACA,sDADA;AAEA,0DAFA;AAGA,yBAHA;;AAKA,SAZA,MAYA;AACA;AACA;AACA,sDADA;AAEA,0DAFA;AAGA,wBAHA,CAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,mCADA;AAEA,qCAFA;;AAIA;AACA,KAlDA;;AAoDA;;;;AAIA,YAxDA,oBAwDA,IAxDA,EAwDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDADA;AAEA,4DAFA;AAGA,2BAHA;;AAKA,WAZA,MAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SA7BA;AA8BA;AACA;AACA,KAjGA;AAkGA;;;;;AAKA,eAvGA,uBAuGA,IAvGA,EAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDADA;AAEA,4DAFA;AAGA,2BAHA;;;AAMA,WAPA,MAOA;AACA;AACA;AACA,wDADA;AAEA,4DAFA;AAGA,0BAHA,CAGA;AAHA;AAKA;AACA;;AAEA,SAvBA;AAwBA;AACA,OAhCA,MAgCA;AACA;AACA,4BADA;;AAGA;AACA,KA9IA,EA8IA;;;AAGA,aAjJA,uBAiJA;AACA;AACA;AACA;AACA;AACA;AACA,oCADA;AAEA,uBAFA;;AAIA,OAPA,MAOA;AACA;AACA,0BADA;;AAGA;AACA;AACA,KAhKA,EArBA,E","file":"components/file-list/file-list.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./file-list.vue?vue&type=template&id=373c8024&\"\nvar renderjs\nimport script from \"./file-list.vue?vue&type=script&lang=js&\"\nexport * from \"./file-list.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/file-list/file-list.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./file-list.vue?vue&type=template&id=373c8024&\"","var components\ntry {\n  components = {\n    uniList: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-list/components/uni-list/uni-list\" */ \"@/uni_modules/uni-list/components/uni-list/uni-list.vue\"\n      )\n    },\n    uniListItem: function() {\n      return import(\n        /* webpackChunkName: \"components/uni-list-item/uni-list-item\" */ \"@/components/uni-list-item/uni-list-item.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./file-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./file-list.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"directory-body\">\r\n\t\t<uni-list>\r\n\t\t\t<uni-list-item v-for=\"item in fileList\" :key=\"item.fullPath\" :title=\"item.name\"\r\n\t\t\t\t:clickable=\"true\" :thumb=\"item.isFile?'/static/svg/file.svg':'/static/svg/folder.svg'\"\r\n\t\t\t\t@click=\"getNextFile(item)\">\r\n\t\t\t</uni-list-item>\r\n\t\t</uni-list>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport{showLoading,hideLoading} from '../../utils/loading.js'\r\n\tvar File = plus.android.importClass(\"java.io.File\");\r\n\tplus.android.importClass('java.io.BufferedReader');\r\n\tconst Environment = plus.android.importClass(\"android.os.Environment\");\r\n\tconst StatFs = plus.android.importClass(\"android.os.StatFs\");\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tpath: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => ({})\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tfileList: [],\r\n\t\t\t\tdirsCount: 0,\r\n\t\t\t\tfilesCount: 0,\r\n\t\t\t\tcurrentPath:\"\",\r\n\t\t\t\tloadingCount:0,\r\n\t\t\t\tdirs: [],\r\n\t\t\t\tfiles: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tonLoad() {\r\n\t\t\tthis.loadDir();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/**\r\n\t\t\t * 加载文件总数据\r\n\t\t\t */\r\n\t\t\tloadDir() {\r\n\t\t\t\t// // 获取根目录\r\n\t\t\t\tlet sdRoot = Environment.getExternalStorageDirectory();\r\n\t\t\t\tthis.path=sdRoot;\r\n\t\t\t\t// 遍历sd卡根目录下的所有文件和文件夹  \r\n\t\t\t\tshowLoading()\r\n\t\t\t\tthis.filesCount=this.dirsCount=0;\r\n\t\t\t\tthis.fileList=[];\r\n\t\t\t\tlet files = plus.android.invoke(this.path, \"listFiles\");\r\n\t\t\t\tlet len = files.length;\r\n\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\tlet file = files[i];\r\n\r\n\t\t\t\t\t//非隐藏文件执行操作  \r\n\t\t\t\t\t// if (!plus.android.invoke(file, \"isHidden\")) {\r\n\r\n\t\t\t\t\t// 判断是文件还是文件夹  \r\n\t\t\t\t\tif (plus.android.invoke(file, \"isDirectory\")) {\r\n\t\t\t\t\t\tthis.dirs.push({\r\n\t\t\t\t\t\t\tname: plus.android.invoke(file, \"getName\"),\r\n\t\t\t\t\t\t\tfullPath: plus.android.invoke(file, \"getPath\"),\r\n\t\t\t\t\t\t\tisFile: false,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tthis.dirsCount++\r\n\t\t\t\t\t\tthis.getFiles({\r\n\t\t\t\t\t\t\tname: plus.android.invoke(file, \"getName\"),\r\n\t\t\t\t\t\t\tfullPath: plus.android.invoke(file, \"getPath\"),\r\n\t\t\t\t\t\t\tisFile: false,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 文件\r\n\t\t\t\t\t\tthis.files.push({\r\n\t\t\t\t\t\t\tname: plus.android.invoke(file, \"getName\"),\r\n\t\t\t\t\t\t\tfullPath: plus.android.invoke(file, \"getPath\"),\r\n\t\t\t\t\t\t\tisFile: true, // 是否是文件\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tthis.filesCount++\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t}\r\n\t\t\t\tthis.fileList = [...this.dirs, ...this.files]\r\n\t\t\t\tthis.$emit(\"updateCount\", {\r\n\t\t\t\t\t\"dirsCount\": this.dirsCount,\r\n\t\t\t\t\t\"filesCount\": this.filesCount\r\n\t\t\t\t})\r\n\t\t\t\thideLoading()\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 获取文件夹内容\r\n\t\t\t * @param {Object} file\r\n\t\t\t */\r\n\t\t\tgetFiles(file) {\r\n\t\t\t\tif (!file.isFile) {\r\n\r\n\t\t\t\t\tlet directory = new File(file.fullPath);\r\n\t\t\t\t\tlet arr = directory.listFiles();\r\n\t\t\t\t\t// let arr = plus.android.invoke(file.fullPath, \"listFiles\");\r\n\t\t\t\t\t// this.path = file.fullPath;\r\n\t\t\t\t\tconst that = this;\r\n\t\t\t\t\t// console.log(arr)\r\n\t\t\t\t\tarr && arr.forEach(item => {\r\n\t\t\t\t\t\t// console.log(item)\r\n\t\t\t\t\t\t//非隐藏文件执行操作\r\n\t\t\t\t\t\t// if (!plus.android.invoke(item, \"isHidden\")) {\r\n\r\n\t\t\t\t\t\t// 判断是文件还是文件夹  \r\n\t\t\t\t\t\tif (plus.android.invoke(item, \"isDirectory\")) {\r\n\t\t\t\t\t\t\t// that.dirs.push({\r\n\t\t\t\t\t\t\t// \tname: plus.android.invoke(item, \"getName\"),\r\n\t\t\t\t\t\t\t// \tfullPath: plus.android.invoke(item, \"getPath\"),\r\n\t\t\t\t\t\t\t// \tisFile: false,\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\tthat.dirsCount++\r\n\t\t\t\t\t\t\tthat.getFiles({\r\n\t\t\t\t\t\t\t\tname: plus.android.invoke(item, \"getName\"),\r\n\t\t\t\t\t\t\t\tfullPath: plus.android.invoke(item, \"getPath\"),\r\n\t\t\t\t\t\t\t\tisFile: false,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// 文件\r\n\t\t\t\t\t\t\t// that.files.push({\r\n\t\t\t\t\t\t\t// \tname: plus.android.invoke(item, \"getName\"),\r\n\t\t\t\t\t\t\t// \tfullPath: plus.android.invoke(item, \"getPath\"),\r\n\t\t\t\t\t\t\t// \tisFile: true, // 是否是文件\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\tthat.filesCount++\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t})\r\n\t\t\t\t\t// this.fileList = [...dirs, ...files]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 获取下一级目录文件\r\n\t\t\t * @param {Object} e\r\n\t\t\t * @param {Object} file\r\n\t\t\t */\r\n\t\t\tgetNextFile(file) {\r\n\t\t\t\tshowLoading();\r\n\t\t\t\tif (!file.isFile) {\r\n\t\t\t\t\thideLoading()\r\n\t\t\t\t\tlet directory = new File(file.fullPath);\r\n\t\t\t\t\tlet arr = directory.listFiles();\r\n\t\t\t\t\tthis.currentPath=file.fullPath;\r\n\t\t\t\t\tlet dirs=[];\r\n\t\t\t\t\tlet files=[]\r\n\t\t\t\t\tarr && arr.forEach(item => {\r\n\t\t\t\t\t\t// console.log(item)\r\n\t\t\t\t\t\t//非隐藏文件执行操作\r\n\t\t\t\t\t\t// if (!plus.android.invoke(item, \"isHidden\")) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// 判断是文件还是文件夹  \r\n\t\t\t\t\t\tif (plus.android.invoke(item, \"isDirectory\")) {\r\n\t\t\t\t\t\t\t dirs.push({\r\n\t\t\t\t\t\t\t\tname: plus.android.invoke(item, \"getName\"),\r\n\t\t\t\t\t\t\t\tfullPath: plus.android.invoke(item, \"getPath\"),\r\n\t\t\t\t\t\t\t\tisFile: false,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// 文件\r\n\t\t\t\t\t\t\t files.push({\r\n\t\t\t\t\t\t\t\tname: plus.android.invoke(item, \"getName\"),\r\n\t\t\t\t\t\t\t\tfullPath: plus.android.invoke(item, \"getPath\"),\r\n\t\t\t\t\t\t\t\tisFile: true, // 是否是文件\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.fileList = [...dirs, ...files]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle:\"已经到最下层目录了\"\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},/**\r\n\t\t\t * 跳转到上一级目录\r\n\t\t\t */\r\n\t\t\ttoPrePath() {\r\n\t\t\t\tshowLoading();\r\n\t\t\t\tif (this.currentPath&&this.path.getAbsolutePath() !== this.currentPath&&this.currentPath!=\"\") {\r\n\t\t\t\t\tlet index = this.currentPath.lastIndexOf('/')\r\n\t\t\t\t\tthis.currentPath = this.currentPath.substr(0, index);\r\n\t\t\t\t\tthis.getNextFile({\r\n\t\t\t\t\t\tfullPath: this.currentPath,\r\n\t\t\t\t\t\tisFile: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle:\"已经到根目录了\"\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\thideLoading()\r\n\t\t\t},\r\n\t\t\t \r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n</style>\n"],"sourceRoot":""}